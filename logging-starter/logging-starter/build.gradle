plugins {
    id 'java'
    id 'maven-publish'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'org.example'
version = '0.2.0'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    configureEach {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.slf4j', module: 'slf4j-jdk14'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

dependencies {
    // Spring Boot and Log4j2 dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.0'
    implementation 'io.micrometer:micrometer-registry-statsd:1.13.3'

    // OpenTelemetry dependencies
    implementation 'io.opentelemetry:opentelemetry-api:1.31.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.31.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.31.0'

    // Log4j2 JSON Template Layout for structured logging
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-layout-template-json:2.20.0'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner:4.1.+'
    testImplementation 'org.assertj:assertj-core:3.26.+'
    testImplementation 'io.micrometer:micrometer-observation-test:1.13.2'

    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

}

test {
    useJUnitPlatform()
    jvmArgs '-Djdk.instrument.traceUsage', '-XX:+EnableDynamicAgentLoading'
    maxParallelForks = Runtime.getRuntime().availableProcessors()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = '0.8.11'
}


jacocoTestReport {
    reports {
        xml.required = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

processResources {
//    from(sourceSets.main.resources.srcDirs) {
//        include 'META-INF/spring.factories'
//    }
//
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


