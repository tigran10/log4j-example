jib {
    from {
        image = 'openjdk:21-jdk-slim'
    }
    to {
        image = 'your-docker-repo/hello-world-api' // Set your desired image name here
    }
    container {
        ports = ['8080']
        workingDirectory = '/app'
        environment = [
            'SPRING_PROFILES_ACTIVE'   : 'development',
            'OTEL_EXPORTER_OTLP_ENDPOINT' : 'http://localhost:4317',
            'OTEL_RESOURCE_ATTRIBUTES' : 'service.name=hello-world-api'
        ]
        entrypoint = [
            'java',
            '-javaagent:/app/opentelemetry-javaagent.jar',
            '-jar',
            '/app/hello-world-api.jar',
            '--spring.profiles.active=${SPRING_PROFILES_ACTIVE}'
        ]
    }
    extraDirectories {
        paths {
            path {
                from = file('path-to-opentelemetry-javaagent.jar') // Replace with the path to your agent file
                into = '/app'
            }
        }
    }
}


tasks.withType<Jar> {
    archiveFileName.set("hello-world-api.jar")
}


# Use Python 3.11 slim image as base for compatibility
FROM python:3.11-slim

# Install dependencies for Taskfile, Helm, and gcloud SDK
RUN apt-get update && apt-get install -y \
    bash \
    curl \
    make \
    git \
    ca-certificates \
    tar \
    jq \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# Install Taskfile
RUN curl -s https://taskfile.dev/install.sh | sh

# Install Helm
RUN curl -LO https://get.helm.sh/helm-v3.13.0-linux-amd64.tar.gz \
    && tar -zxvf helm-v3.13.0-linux-amd64.tar.gz \
    && mv linux-amd64/helm /usr/local/bin/helm \
    && rm -rf helm-v3.13.0-linux-amd64.tar.gz linux-amd64

# Install gcloud SDK (version 484.0.0)
RUN curl -LO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-484.0.0-linux-x86_64.tar.gz \
    && tar -xf google-cloud-cli-484.0.0-linux-x86_64.tar.gz \
    && ./google-cloud-sdk/install.sh --quiet \
    && rm -rf google-cloud-cli-484.0.0-linux-x86_64.tar.gz

# Add gcloud to PATH
ENV PATH=$PATH:/google-cloud-sdk/bin

# Initialize the gcloud CLI
RUN gcloud components install kubectl

# Set working directory
WORKDIR /app

# Use bash as default shell
CMD ["/bin/bash"]


